{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n//外部のモジュールで公開されたものを利用するためのimport文\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport 'isomorphic-fetch'; //各ページに関する情報の定義\n\nconst pages = {\n  index: {\n    title: 'すべてのToDo',\n    fetchQuery: ''\n  },\n  active: {\n    title: '未完了のToDo',\n    fetchQuery: '?completed=false'\n  },\n  completed: {\n    title: '完了したToDo',\n    fetchQuery: '?completed=true'\n  }\n}; //CSRでページを切り替えるためのリンク\n\nconst pageLinks = Object.keys(pages).map((page, ind) => /*#__PURE__*/_jsx(Link, {\n  href: `/${page === 'index' ? '' : page}`,\n  children: /*#__PURE__*/_jsx(\"a\", {\n    style: {\n      marginRight: 10\n    },\n    children: pages[page].title\n  })\n}, ind));\n\nconst pictureLink = /*#__PURE__*/_jsx(Link, {\n  href: `https://www.irasutoya.com/`,\n  children: /*#__PURE__*/_jsx(\"a\", {\n    style: {\n      marginRight: 10\n    },\n    children: \"\\u3042\\u3044\\u3046\\u3048\"\n  })\n}); //Reactコンポーネントを実装し、外部のモジュールで利用可能なようexport文で公開\n\n\nexport default function Todos(props) {\n  const {\n    title,\n    fetchQuery\n  } = pages[props.page]; //コンポーネントの状態の初期化と、propsの値に応じた更新\n\n  const {\n    0: todos,\n    1: setTodos\n  } = useState([]); //useEffectは、クライアント再度にてコンポーネントの描画が完了後に実行される処理\n\n  useEffect(() => {\n    fetch(`/api/todos${fetchQuery}`).then(async res => res.ok ? setTodos(await res.json()) : alert(await res.text()));\n  }, [props.page]); //第二引数を指定しているので、再描画が発生するたびではなく、props.pageが変わった時だけuseEffectが働く\n  //このコンポーネントが描画するUIをJSX構文で記述して返す\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: title\n      })\n    }), /*#__PURE__*/_jsx(\"h1\", {\n      children: title\n    }), /*#__PURE__*/_jsx(\"ul\", {\n      children: todos.map(({\n        id,\n        title,\n        completed\n      }) => /*#__PURE__*/_jsx(\"li\", {\n        children: /*#__PURE__*/_jsxs(\"span\", {\n          style: completed ? {\n            textDecoration: 'line-through'\n          } : {},\n          children: [id, \"  \\uFF1A  \", title]\n        })\n      }, id))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: pageLinks\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(Link, {\n        href: `https://www.irasutoya.com/`,\n        children: /*#__PURE__*/_jsx(\"a\", {\n          style: {\n            marginRight: 10\n          },\n          children: \"\\u3042\\u3044\\u3046\\u3048\"\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/taniguchimana/workspace/hands_on/chapter3/todo-express/components/ToDos.js"],"names":["useEffect","useState","Link","Head","pages","index","title","fetchQuery","active","completed","pageLinks","Object","keys","map","page","ind","marginRight","pictureLink","Todos","props","todos","setTodos","fetch","then","res","ok","json","alert","text","id","textDecoration"],"mappings":";;;AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,kBAAP,C,CAEA;;AACA,MAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AAACC,IAAAA,KAAK,EAAE,UAAR;AAAoBC,IAAAA,UAAU,EAAE;AAAhC,GADK;AAEZC,EAAAA,MAAM,EAAE;AAACF,IAAAA,KAAK,EAAE,UAAR;AAAoBC,IAAAA,UAAU,EAAE;AAAhC,GAFI;AAGZE,EAAAA,SAAS,EAAE;AAACH,IAAAA,KAAK,EAAE,UAAR;AAAoBC,IAAAA,UAAU,EAAE;AAAhC;AAHC,CAAd,C,CAMA;;AACA,MAAMG,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,GAAnB,CAAuB,CAACC,IAAD,EAAMC,GAAN,kBACvC,KAAC,IAAD;AAAM,EAAA,IAAI,EAAK,IAAGD,IAAI,KAAK,OAAT,GAAmB,EAAnB,GAAwBA,IAAK,EAA/C;AAAA,yBACE;AAAG,IAAA,KAAK,EAAI;AAAEE,MAAAA,WAAW,EAAE;AAAf,KAAZ;AAAA,cAAiCZ,KAAK,CAACU,IAAD,CAAL,CAAYR;AAA7C;AADF,GAAyDS,GAAzD,CADgB,CAAlB;;AAMA,MAAME,WAAW,gBAAS,KAAC,IAAD;AAAM,EAAA,IAAI,EAAK,4BAAf;AAAA,yBAC1B;AAAG,IAAA,KAAK,EAAI;AAAED,MAAAA,WAAW,EAAE;AAAf,KAAZ;AAAA;AAAA;AAD0B,EAA1B,C,CAIA;;;AACA,eAAe,SAASE,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM;AAACb,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAsBH,KAAK,CAACe,KAAK,CAACL,IAAP,CAAjC,CADmC,CAGnC;;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBpB,QAAQ,CAAC,EAAD,CAAlC,CAJmC,CAKlC;;AACDD,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,KAAK,CAAE,aAAYf,UAAW,EAAzB,CAAL,CACGgB,IADH,CACQ,MAAMC,GAAN,IAAaA,GAAG,CAACC,EAAJ,GACfJ,QAAQ,CAAC,MAAMG,GAAG,CAACE,IAAJ,EAAP,CADO,GAEfC,KAAK,CAAC,MAAMH,GAAG,CAACI,IAAJ,EAAP,CAHX;AAKD,GANQ,EAMN,CAACT,KAAK,CAACL,IAAP,CANM,CAAT,CANmC,CAYlB;AAEjB;;AACA,sBACE;AAAA,4BACE,KAAC,IAAD;AAAA,6BACE;AAAA,kBAAQR;AAAR;AADF,MADF,eAIE;AAAA,gBAAKA;AAAL,MAJF,eAME;AAAA,gBACGc,KAAK,CAACP,GAAN,CAAU,CAAC;AAAEgB,QAAAA,EAAF;AAAMvB,QAAAA,KAAN;AAAaG,QAAAA;AAAb,OAAD,kBACT;AAAA,+BACE;AAAM,UAAA,KAAK,EAAEA,SAAS,GAAG;AAAEqB,YAAAA,cAAc,EAAE;AAAlB,WAAH,GAAuC,EAA7D;AAAA,qBACGD,EADH,gBACYvB,KADZ;AAAA;AADF,SAASuB,EAAT,CADD;AADH,MANF,eAeE;AAAA,gBAAMnB;AAAN,MAfF,eAiBE;AAAA,6BACA,KAAC,IAAD;AAAM,QAAA,IAAI,EAAK,4BAAf;AAAA,+BACI;AAAG,UAAA,KAAK,EAAI;AAAEM,YAAAA,WAAW,EAAE;AAAf,WAAZ;AAAA;AAAA;AADJ;AADA,MAjBF;AAAA,IADF;AAyBD","sourcesContent":["//外部のモジュールで公開されたものを利用するためのimport文\nimport { useEffect, useState} from 'react'\nimport Link from 'next/link'\nimport Head from 'next/head'\nimport 'isomorphic-fetch'\n\n//各ページに関する情報の定義\nconst pages = {\n  index: {title: 'すべてのToDo', fetchQuery: ''},\n  active: {title: '未完了のToDo', fetchQuery: '?completed=false'},\n  completed: {title: '完了したToDo', fetchQuery: '?completed=true'}\n}\n\n//CSRでページを切り替えるためのリンク\nconst pageLinks = Object.keys(pages).map((page,ind) => \n  <Link href = {`/${page === 'index' ? '' : page}`} key = {ind}> \n    <a style = {{ marginRight: 10}}>{pages[page].title}</a>\n  </Link>\n)\n\nconst pictureLink =       <Link href = {`https://www.irasutoya.com/`} > \n<a style = {{ marginRight: 10}}>あいうえ</a>\n</Link>\n\n//Reactコンポーネントを実装し、外部のモジュールで利用可能なようexport文で公開\nexport default function Todos(props) {\n  const {title, fetchQuery} = pages[props.page]\n\n  //コンポーネントの状態の初期化と、propsの値に応じた更新\n  const [todos, setTodos] = useState([])\n  　//useEffectは、クライアント再度にてコンポーネントの描画が完了後に実行される処理\n  useEffect(() => {\n    fetch(`/api/todos${fetchQuery}`)\n      .then(async res => res.ok\n        ? setTodos(await res.json())\n        : alert(await res.text())\n      )\n  }, [props.page]) //第二引数を指定しているので、再描画が発生するたびではなく、props.pageが変わった時だけuseEffectが働く\n\n  //このコンポーネントが描画するUIをJSX構文で記述して返す\n  return (\n    <>\n      <Head>\n        <title>{title}</title>\n      </Head>\n      <h1>{title}</h1>\n      {/* ToDo一覧の表示 */}\n      <ul>\n        {todos.map(({ id, title, completed}) => \n          <li key={id}>\n            <span style={completed ? { textDecoration: 'line-through'} : {}}>\n              {id}  ：  {title}      \n            </span>\n          </li>\n        )}\n      </ul>\n      <div>{pageLinks}</div>\n\n      <div>\n      <Link href = {`https://www.irasutoya.com/`} > \n          <a style = {{ marginRight: 10}}>あいうえ</a>\n      </Link>\n      </div>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}