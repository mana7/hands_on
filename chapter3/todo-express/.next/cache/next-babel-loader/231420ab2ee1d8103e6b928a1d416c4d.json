{"ast":null,"code":"import _regeneratorRuntime from \"/Users/taniguchimana/workspace/hands_on/chapter3/todo-express/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/taniguchimana/workspace/hands_on/chapter3/todo-express/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\n//外部のモジュールで公開されたものを利用するためのimport文\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport 'isomorphic-fetch'; //各ページに関する情報の定義\n\nvar pages = {\n  index: {\n    title: 'すべてのToDo',\n    fetchQuery: ''\n  },\n  active: {\n    title: '未完了のToDo',\n    fetchQuery: '?completed=false'\n  },\n  completed: {\n    title: '完了したToDo',\n    fetchQuery: '?completed=true'\n  }\n}; //CSRでページを切り替えるためのリンク\n\nvar pageLinks = Object.keys(pages).map(function (page, ind) {\n  return /*#__PURE__*/_jsx(Link, {\n    href: \"/\".concat(page === 'index' ? '' : page),\n    children: /*#__PURE__*/_jsx(\"a\", {\n      style: {\n        marginRight: 10\n      },\n      children: pages[page].title\n    })\n  }, ind);\n}); //Reactコンポーネントを実装し、外部のモジュールで利用可能なようexport文で公開\n\nexport default function Todos(props) {\n  _s();\n\n  var _pages$props$page = pages[props.page],\n      title = _pages$props$page.title,\n      fetchQuery = _pages$props$page.fetchQuery; //コンポーネントの状態の初期化と、propsの値に応じた更新\n\n  var _useState = useState([]),\n      todos = _useState[0],\n      setTodos = _useState[1]; //useEffectは、クライアント再度にてコンポーネントの描画が完了後に実行される処理\n\n\n  useEffect(function () {\n    fetch(\"/api/todos\".concat(fetchQuery)).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(res) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!res.ok) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.t1 = setTodos;\n                _context.next = 4;\n                return res.json();\n\n              case 4:\n                _context.t2 = _context.sent;\n                _context.t0 = (0, _context.t1)(_context.t2);\n                _context.next = 13;\n                break;\n\n              case 8:\n                _context.t3 = alert;\n                _context.next = 11;\n                return res.text();\n\n              case 11:\n                _context.t4 = _context.sent;\n                _context.t0 = (0, _context.t3)(_context.t4);\n\n              case 13:\n                return _context.abrupt(\"return\", _context.t0);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }, [props.page]); //第二引数を指定しているので、再描画が発生するたびではなく、props.pageが変わった時だけuseEffectが働く\n  //このコンポーネントが描画するUIをJSX構文で記述して返す\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: title\n      })\n    }), /*#__PURE__*/_jsx(\"h1\", {\n      children: title\n    }), /*#__PURE__*/_jsx(\"ul\", {\n      children: todos.map(function (_ref2) {\n        var id = _ref2.id,\n            title = _ref2.title,\n            completed = _ref2.completed;\n        return /*#__PURE__*/_jsx(\"li\", {\n          children: /*#__PURE__*/_jsxs(\"span\", {\n            style: completed ? {\n              textDecoration: 'line-through'\n            } : {},\n            children: [id, \"  \\uFF1A  \", title, \"\\uFF1A\", completed, id, \"  \\uFF1A  \", title, \"\\uFF1A\", completed]\n          })\n        }, id);\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: pageLinks\n    })]\n  });\n}\n\n_s(Todos, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/Users/taniguchimana/workspace/hands_on/chapter3/todo-express/components/ToDos.js"],"names":["useEffect","useState","Link","Head","pages","index","title","fetchQuery","active","completed","pageLinks","Object","keys","map","page","ind","marginRight","Todos","props","todos","setTodos","fetch","then","res","ok","json","alert","text","id","textDecoration"],"mappings":";;;;;;;;AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,kBAAP,C,CAEA;;AACA,IAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AAACC,IAAAA,KAAK,EAAE,UAAR;AAAoBC,IAAAA,UAAU,EAAE;AAAhC,GADK;AAEZC,EAAAA,MAAM,EAAE;AAACF,IAAAA,KAAK,EAAE,UAAR;AAAoBC,IAAAA,UAAU,EAAE;AAAhC,GAFI;AAGZE,EAAAA,SAAS,EAAE;AAACH,IAAAA,KAAK,EAAE,UAAR;AAAoBC,IAAAA,UAAU,EAAE;AAAhC;AAHC,CAAd,C,CAMA;;AACA,IAAMG,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,GAAnB,CAAuB,UAACC,IAAD,EAAMC,GAAN;AAAA,sBACvC,KAAC,IAAD;AAAM,IAAA,IAAI,aAAQD,IAAI,KAAK,OAAT,GAAmB,EAAnB,GAAwBA,IAAhC,CAAV;AAAA,2BACE;AAAG,MAAA,KAAK,EAAI;AAAEE,QAAAA,WAAW,EAAE;AAAf,OAAZ;AAAA,gBAAiCZ,KAAK,CAACU,IAAD,CAAL,CAAYR;AAA7C;AADF,KAAyDS,GAAzD,CADuC;AAAA,CAAvB,CAAlB,C,CAMA;;AACA,eAAe,SAASE,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAAA,0BACPd,KAAK,CAACc,KAAK,CAACJ,IAAP,CADE;AAAA,MAC5BR,KAD4B,qBAC5BA,KAD4B;AAAA,MACrBC,UADqB,qBACrBA,UADqB,EAGnC;;AAHmC,kBAITN,QAAQ,CAAC,EAAD,CAJC;AAAA,MAI5BkB,KAJ4B;AAAA,MAIrBC,QAJqB,iBAKlC;;;AACDpB,EAAAA,SAAS,CAAC,YAAM;AACdqB,IAAAA,KAAK,qBAAcd,UAAd,EAAL,CACGe,IADH;AAAA,0EACQ,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAaA,GAAG,CAACC,EAAjB;AAAA;AAAA;AAAA;;AAAA,8BACFJ,QADE;AAAA;AAAA,uBACaG,GAAG,CAACE,IAAJ,EADb;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,8BAEFC,KAFE;AAAA;AAAA,uBAEUH,GAAG,CAACI,IAAJ,EAFV;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADR;;AAAA;AAAA;AAAA;AAAA;AAKD,GANQ,EAMN,CAACT,KAAK,CAACJ,IAAP,CANM,CAAT,CANmC,CAYlB;AAEjB;;AACA,sBACE;AAAA,4BACE,KAAC,IAAD;AAAA,6BACE;AAAA,kBAAQR;AAAR;AADF,MADF,eAIE;AAAA,gBAAKA;AAAL,MAJF,eAME;AAAA,gBACGa,KAAK,CAACN,GAAN,CAAU;AAAA,YAAGe,EAAH,SAAGA,EAAH;AAAA,YAAOtB,KAAP,SAAOA,KAAP;AAAA,YAAcG,SAAd,SAAcA,SAAd;AAAA,4BACT;AAAA,iCACE;AAAM,YAAA,KAAK,EAAEA,SAAS,GAAG;AAAEoB,cAAAA,cAAc,EAAE;AAAlB,aAAH,GAAuC,EAA7D;AAAA,uBACGD,EADH,gBACYtB,KADZ,YACoBG,SADpB,EAEGmB,EAFH,gBAEYtB,KAFZ,YAEoBG,SAFpB;AAAA;AADF,WAASmB,EAAT,CADS;AAAA,OAAV;AADH,MANF,eAgBE;AAAA,gBAAMlB;AAAN,MAhBF;AAAA,IADF;AAoBD;;GAnCuBO,K;;KAAAA,K","sourcesContent":["//外部のモジュールで公開されたものを利用するためのimport文\nimport { useEffect, useState} from 'react'\nimport Link from 'next/link'\nimport Head from 'next/head'\nimport 'isomorphic-fetch'\n\n//各ページに関する情報の定義\nconst pages = {\n  index: {title: 'すべてのToDo', fetchQuery: ''},\n  active: {title: '未完了のToDo', fetchQuery: '?completed=false'},\n  completed: {title: '完了したToDo', fetchQuery: '?completed=true'}\n}\n\n//CSRでページを切り替えるためのリンク\nconst pageLinks = Object.keys(pages).map((page,ind) => \n  <Link href = {`/${page === 'index' ? '' : page}`} key = {ind}> \n    <a style = {{ marginRight: 10}}>{pages[page].title}</a>\n  </Link>\n)\n\n//Reactコンポーネントを実装し、外部のモジュールで利用可能なようexport文で公開\nexport default function Todos(props) {\n  const {title, fetchQuery} = pages[props.page]\n\n  //コンポーネントの状態の初期化と、propsの値に応じた更新\n  const [todos, setTodos] = useState([])\n  　//useEffectは、クライアント再度にてコンポーネントの描画が完了後に実行される処理\n  useEffect(() => {\n    fetch(`/api/todos${fetchQuery}`)\n      .then(async res => res.ok\n        ? setTodos(await res.json())\n        : alert(await res.text())\n      )\n  }, [props.page]) //第二引数を指定しているので、再描画が発生するたびではなく、props.pageが変わった時だけuseEffectが働く\n\n  //このコンポーネントが描画するUIをJSX構文で記述して返す\n  return (\n    <>\n      <Head>\n        <title>{title}</title>\n      </Head>\n      <h1>{title}</h1>\n      {/* ToDo一覧の表示 */}\n      <ul>\n        {todos.map(({ id, title, completed}) => \n          <li key={id}>\n            <span style={completed ? { textDecoration: 'line-through'} : {}}>\n              {id}  ：  {title}：{completed}\n              {id}  ：  {title}：{completed}              \n            </span>\n          </li>\n        )}\n      </ul>\n      <div>{pageLinks}</div>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}